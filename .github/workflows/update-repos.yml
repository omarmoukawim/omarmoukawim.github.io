name: Update Repository List

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-repo-list:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Fetch Repository Data
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        npm init -y
        npm install @octokit/rest
        node -e "
        import { Octokit } from '@octokit/rest';
        import fs from 'fs/promises';

        const octokit = new Octokit({ auth: process.env.GH_TOKEN });

        async function fetchRepos() {
          const { data } = await octokit.repos.listForAuthenticatedUser({
            visibility: 'public',
            sort: 'updated',
            per_page: 100
          });

          const repoData = await Promise.all(data.map(async (repo) => {
            try {
              const { data: readmeData } = await octokit.repos.getReadme({
                owner: repo.owner.login,
                repo: repo.name,
              });
              const readmeContent = Buffer.from(readmeData.content, 'base64').toString('utf-8');
              return {
                name: repo.name,
                description: repo.description,
                html_url: repo.html_url,
                readme: readmeContent
              };
            } catch (error) {
              console.error(`Error fetching README for ${repo.name}: ${error.message}`);
              return {
                name: repo.name,
                description: repo.description,
                html_url: repo.html_url,
                readme: 'No README available.'
              };
            }
          }));

          await fs.writeFile('repos.json', JSON.stringify(repoData, null, 2));
        }

        fetchRepos().catch(console.error);
        "

    - name: Commit and Push Changes
      run: |
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git add repos.json
        git commit -m "Update repository list" || echo "No changes to commit"
        git push
