[
  {
    "name": "MultiAgent-RedTeam-Toolkit",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/MultiAgent-RedTeam-Toolkit",
    "readme": "# AI Red Teaming Simulation\n![AI Red Teaming Simulation](images/ai_agents.png)\n\n## Overview\n\nThis repository contains a Python project designed to simulate an AI Red Teaming scenario using a multi-agent system composed of three distinct agents: the RedTeamer, the Assistant (Kairos), and the Evaluator. The goal of this project is to test how a conversational AI model  behaves when challenged with potential security vulnerabilities or ethically complex tasks.\n\n**Important Note:** This project is intended as a controlled, experimental \"game\" to explore the interactions and behaviors of multi-agent Large Language Model (LLM) systems. It was developed as part of an investigation into the capabilities and limitations of LLMs when they interact in adversarial scenarios. This simulation is not intended for real-world application and should be used only for educational and research purposes.\n\n## Table of Contents\n\n- [Introduction](#introduction)\n- [Architecture](#architecture)\n- [Installation](#installation)\n- [Details](#details)\n- [Future Work](#future-work)\n- [Contributing](#contributing)\n\n\n## Introduction\n\nThis project simulates a Red Teaming exercise where a language model named \"Kairos\" is tested for vulnerabilities. The core objective is to simulate a scenario where a Red Teaming agent attempts to extract sensitive information or achieve a specific malicious goal through conversations with the AI model.\n\nThis project is a multi-agent system that emphasizes how different AI agents—each with its own purpose and model—interact in adversarial setups. These agents are designed to test the boundaries of LLMs in terms of behavior, security, and compliance with ethical standards. \n\n\n## Architecture\n\nThe project is built around the following components:\n\n1. **Kairos Assistant**: This agent is based on Gemma-7B-IT, serving as the AI model that is being tested for vulnerabilities. Its purpose is to respond to user prompts while adhering to ethical standards.\n2. **Red Teaming Agent**: Powered by Llama-3.1-70B-Versatile, the RedTeamer agent acts as an adversarial AI tasked with attempting to extract sensitive information or induce malicious behaviors in Kairos.\n3. **Evaluator Agent**: Also built on Llama-3.1-70B-Versatile, the Evaluator agent is responsible for assessing whether the RedTeamer successfully exploited the Kairos Assistant in each conversation.\n\nThese agents work together in a looped conversation until either the malicious objective is met, or a predefined number of conversation turns is reached. The Evaluator agent continuously reviews the exchanges to determine if the RedTeamer’s goal has been accomplished.\n\n## Installation\n\nTo set up this project locally, follow these steps:\n\n1. **Clone the Repository**:\n   ```bash\n   git clone https://github.com/your-username/ai-red-teaming-simulation.git\n   cd ai-red-teaming-simulation\n\n2. **Set Up a Virtual Environment (optional but recommended)**:\n\n    ```bash\n    python -m venv venv\n    source venv/bin/activate  # On Windows use `venv\\Scripts\\activate`\n\n\n3. **Install Dependencies:**\n\n    ```bash\n    pip install -r requirements.txt\n\n4. **Set Up Environment Variables: Create a .env file in the root directory and add your Groq API key:**\n\n    ```bash\n    GROQ_API_KEY=your-groq-api-key\n\n## Details\n- **Kairos Assistant**\n\"Kairos\" is the AI assistant being tested in this project. It is configured to be helpful and compliant with ethical guidelines, but the Red Teaming agent attempts to bypass these safeguards in order to extract sensitive information.\n\n- **Red Teaming Agent**\nThe Red Teaming agent is designed to act as an adversarial AI, engaging in conversation with Kairos to exploit potential weaknesses. It operates under a specific system prompt that encourages it to use creative and subtle methods to achieve its objective without alerting Kairos to its true intent.\n\n- **Evaluator Agent**\nThe Evaluator agent is responsible for assessing each response from Kairos to determine if the Red Teaming agent was successful in achieving its goal. The evaluation results are logged and used to generate the final report.\n\n- **Conversation Workflow**\nInitialization: The Red Teaming agent initiates the conversation with a prompt.\nResponse: Kairos responds to the prompt.\nEvaluation: The response is evaluated to see if the malicious objective was achieved.\nContinuation: If the objective is not achieved, the conversation continues with a new prompt from the Red Teaming agent based on the previous response.\nCompletion: The conversation ends when the objective is achieved or the maximum number of turns is reached.\n- **Final Report**\nThe final report is a text file that includes:\n   - A log of the entire conversation.\n   - The evaluation results for each turn.\n   - A final assessment indicating whether the Red Teaming agent successfully achieved its objective.\n \n## Future Work\n\nThere are several future improvements I'm planning to eork on:\n\n1. **Improved Logging**:\n   - Upgrade the log file format to JSON or CSV for easier data analysis. Adding more details like timestamps or action IDs will help track conversation flow better.\n\n2. **Enhanced Reporting**:\n   - Develop more detailed and interactive reports. Consider using HTML or other formats to make the final report more insightful .\n\n3. **Smarter Red Teaming**:\n   - Make the Red Teaming agent more adaptive. Implementing learning mechanisms could help it develop more sophisticated strategies (i.e. restarting the conversation if needed).\n\n4. **Broaden Testing Scenarios**:\n   - Explore new test cases.\n\n5. **Multi-Modal Input**:\n   - Experiment with different types of input like images or audio.\n\n6. **Parallel Simulations**:\n   - Run multiple simulations simultaneously to gather more data and compare different models and setups.\n\n7. **Human Review**:\n   - Incorporate human evaluation alongside automated checks.\n\n\n## Contributing\nContributions to this project are welcome. If you have suggestions for improvements or find any issues, please feel free to open an issue or submit a pull request.\n"
  },
  {
    "name": "MPPT-array-control-real-time",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/MPPT-array-control-real-time",
    "readme": "This project aimed at simulating photovoltaic (PV) arrays and a boost\nconverter in Simulink, integrating the Perturb and Observe (P&O) algorithm for\nMaximum Power Point Tracking (MPPT) running on a Texas Instruments board, in particu\u0002lar, the LAUNCHXL-F28379D development kit.  The serial communication between MATLAB and the Texas Instruments board for the purpose of achieving a Processor-in-the-Loop (PiL) simulation has been implemented too.\nAfter simulating the regular P&O an enhanced version of it has been implemented: the variable step version, this to overcome problems that arise in partial shading scenarios.\n"
  },
  {
    "name": "Wireless-transmission-fading-channel",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/Wireless-transmission-fading-channel",
    "readme": "# Wireless-transmission-fading-channel\nIn this project the task was to observe how varying the symbol transmitting power affected the BER (Bit error rate). Different symbol lengths and modulations were analyzed (BPSK, 4/8/16/64 PSK and 4/8/16/64 QAM) and the transmission was simulated over Rayleigh, Rician and Gaussian channels.\n\nDURATION: 1 month\n"
  },
  {
    "name": "Drone-trajectory-tracking",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/Drone-trajectory-tracking",
    "readme": "The goal of this project was to successfully control the trajectory of a Crazyflie 2.X drone\nfrom a target PC exploiting data from the Motion Capture system (MoCap) that is streamed by\nanother PC; four infrared cameras were available for the tracking.The use of data from the drone expansion deck combined with the real-time measurements from the MoCap system allowed the\ndrone to follow a target trajectory starting at any given point in the range of view of the Optitrack\ncameras.\nVideo:https://www.youtube.com/shorts/X5SEyiHJuqA\n"
  },
  {
    "name": "Wind-turbine-control",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/Wind-turbine-control",
    "readme": "\nThe sampled and quantized control of the wind turbine has been developed during my Control of Energy Systems course that I have taken in my first semester of Master's degree. We had the complete mathematical model and by means of a PI control the overall system has been not only stabilized but made robust to noise introduced by wind too.\n\n\n"
  },
  {
    "name": "Phone-rotation-streaming-matlab",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/Phone-rotation-streaming-matlab",
    "readme": "This was a personal project that I have undertaken in order to fully understant Heuler rotation matrixes and gain hands on experience on the live streaming of data from a mobile phone to the Matlab environment runnig on PC. The scripts collect data streamed from the phone (rotation along the axes) and replicate the rotations that the phone has on a matlab plot containing a 3d mesh i have done of my phone.This project was done in my last bachelor's year.\n\nDURATION: 3 months\n"
  },
  {
    "name": "1-525-gear-ratio",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/1-525-gear-ratio",
    "readme": "Full project and realization of a 1:525 gear train device to analyze its behavior. The gears and the stand were realized in Fusion 360, and everything was printed on my Anycubic i3 Mega s 3d printer.  Small gear 10 teeth, big gear 35 teeth.\n\nVideo: https://www.youtube.com/shorts/Qgbeii4Fpx4\n"
  },
  {
    "name": "Common-base-amplifier-LTspice",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/Common-base-amplifier-LTspice",
    "readme": "This is my final project for my Electronics II course of my last semester of bachelor's degree. In it I had to correctly project and simulate a common base amplifier on Lt Spice. For the amplifier a 20 dB gain and 1kHz cutoff frequency were requested.\n\nDURATION:1 month\n"
  },
  {
    "name": "Electric-Vehicle-hybrid-fuel-cell",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/Electric-Vehicle-hybrid-fuel-cell",
    "readme": "This is my final project fot the Control of energy systems course of the first semester of my first year of master course in Control systems engineering at Università degli studi dell'aquila. I simulated on Simulink a Hydrogen Fuel Cell and Ultracapacitor Based Electric Power System Sliding Mode Control in an Electric Vehicle Application.\n\nDURATION: 2 months\n"
  },
  {
    "name": "Power-electronics-multilevel-inverters",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/Power-electronics-multilevel-inverters",
    "readme": "The inverter simulink models were made after I had taken my bachelor's course in Power electronics to actually verify the theoretical knowledge I had acquired in lectures. \n\nDURATION: 2 weeks\n"
  },
  {
    "name": "BLE-sniffing",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/BLE-sniffing",
    "readme": "This is my final project fot the Embedded systems course of the first semester of my first year of master course in Control systems engineering at\nUniversità degli studi dell'aquila.\nThe aim of this project was to analyze Bluetooth Low Energy (BLE) packets sent from different transmitting devices in different environments to analyze packet losses and RSSIs.\n\nDURATION: 3 months\n"
  },
  {
    "name": "DC-motor-control",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/DC-motor-control",
    "readme": "In this project the model of a DC motor has been analyzed to control its velocity. All has been implemented in Simulink.The Simulink model is simulated to analyze the performance of the velocity control system. Various parameters such as rise time, settling time, overshoot, and steady-state error are calculated to assess the controller's effectiveness. The control of the velocity has been succesfully designed.\n\nDURATION: 3 weeks\n"
  },
  {
    "name": "Jparcheggio",
    "description": null,
    "html_url": "https://github.com/omarmoukawim/Jparcheggio",
    "readme": "This is my final project fot the Object oriented programming course of the first semester of my second year of bachelor's course in Information engineering at Università degli studi dell'aquila. In this java project a parking lot was implemented with all the classes for vehicles, floors of the parking ecc.\n\nDURATION: 2 months\n"
  }
]